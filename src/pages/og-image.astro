---
import { getImage } from "astro:assets";
import profile from "../assets/profile.jpg";
import "../base.css";
import BaseHead from "../components/BaseHead.astro";
import Body from "../components/Body.astro";
import Link from "../components/Link.astro";
import Html from "../layouts/Html.astro";

export const prerender = false;

const title = Astro.url.searchParams.get("title") ?? "Kevin Kipp";
const description =
	Astro.url.searchParams.get("description") ??
	(title === "Kevin Kipp" ? "UI Engineer based in Austin, TX" : null);

const { src, attributes } = await getImage({
	src: profile,
	widths: [200],
	formats: ["avif", "webp", "jpeg"],
});
console.log(attributes);
---

<Html>
	<BaseHead
		title="Open Graph Image Template"
		description="Hey, you found my Open Graph image template! This page is usually only seen by computers. ðŸ˜…"
	>
		<style>
			/* Puppeteer can't render emojis, so we've got to provide a font for them */
			@font-face {
				font-family: "Noto Color Emoji";
				src: url("/fonts/NotoColorEmoji-Regular.ttf") format("truetype");
				font-weight: 400;
			}

			body {
				font-family: "Recursive", "Noto Color Emoji", sans-serif;
			}
		</style>
	</BaseHead>

	<Body>
		<div class="grid content-between h-full p-16">
			<div>
				<h1 class="text-5xl leading-none font-blackest text-balance">
					{title}
				</h1>
				{
					description && (
						<p class="mt-12 text-2xl text-pretty sublte" id="description">
							{description}
						</p>
					)
				}
			</div>
			<div class="flex items-end">
				<Link class="ml-auto mr-6 text-xl">
					{Astro.site?.host}
				</Link>
				<img class="profile max-w-48" src={src} {...attributes} />
			</div>
		</div>
	</Body>
</Html>
