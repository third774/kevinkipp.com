---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Body from "../components/Body.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";
import MainCenter from "../components/MainCenter.astro";
import Prose from "../components/Prose.astro";
import Html from "./Html.astro";
import Share from "../components/Share.astro";
import { generateBlogPostOgImage } from "../utils/ogImages/generateBlogPostOgImage";

type Props = {
	post: CollectionEntry<"blog">;
	minutesRead: number;
};

await generateBlogPostOgImage(Astro.props.post);

const { data, slug } = Astro.props.post;

const {
	title,
	description,
	scripts,
	published,
	updatedDate,
	heroImage,
	heroAlt,
} = data;
---

<Html>
	<BaseHead
		title={title}
		description={description}
		image={`/open-graph/${slug}.png`}
	/>
	<Body>
		<Header />
		<MainCenter>
			<article class="space-y-12">
				<div class="space-y-3">
					<h1 class="text-3xl font-blackest leading-none">
						{title}
					</h1>
					<div class="text-xs subtle">
						<FormattedDate
							date={published}
							year="numeric"
							month="short"
							day="numeric"
						/>

						 â€¢

						<span>
							~{Astro.props.minutesRead}
						</span>
					</div>
					{
						updatedDate && (
							<div>
								Last updated on <FormattedDate date={updatedDate} />
							</div>
						)
					}
					<p class="subtle">
						{description}
					</p>
					{
						heroImage && (
							<div class="hero-image">
								<Image
									class="max-w-full"
									width={1020}
									height={510}
									src={heroImage}
									alt={heroAlt ?? ""}
								/>
							</div>
						)
					}
				</div>
				<Prose>
					<slot />
				</Prose>
				{
					Astro.site && (
						<Share title={title} url={`${Astro.site.toString()}blog/${slug}`} />
					)
				}
			</article>
		</MainCenter>
		<Footer />
		{
			scripts &&
				scripts.map((script) => <script src={script.src} type={script.type} />)
		}
	</Body>
</Html>
 ../utils/ogImages/generateBlogPostOgImage
